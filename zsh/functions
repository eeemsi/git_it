# Replacement for ps uax | grep $foo
psof () {
    PIDS=$(pidof "${1}")
    [ -z "${PIDS}" ] && { echo "No such process"; return }
    ps -p "$PIDS" u
}

# Set modes for xrandr
presentation_mode () {
    if [ ! -z "$@" ]; then
        xrandr --output VGA1 --mode "$@" --above LVDS1
    else
        xrandr --output VGA1 --off
    fi
}

# More comfortable ifup ifdown
ifre () {
    s ifdown "$@" && s ifup "$@"
}

# Create directoy and cd to it
mkcd () {
    mkdir -p "$@" && cd "$@"
}

# Create temporary directory and cd to it
cdt () {
    local t
    t=$(mktemp -d)
    builtin cd "$t"
}

# Create a directory, cd into it and create a git repository
mkgit () {
     mkdir -p "$@" && cd "$@" && git init
}

# Update git repositories in subfolders and clean them up if wanted
update_git () {
    ARRAY=(`ls -d ./*/`)

    if [ ! -z "$ARRAY" ]; then
        for i in "$ARRAY"; do
            if [ -d "$i" ]; then
                cd "$i" && git pull
                case "$@" in
                    clean) make distclean && git clean -f && git gc
                ;;
                esac
                cd ..
            fi
        done
    fi
}

# Rehash after installing a package
agi () {
    s apt-get install $* && rehash
}

# Rehash after removing a package
agr () {
    s apt-get remove $* && rehash
}

# Start or reattach a tmux session when a ssh connection is established
ssh_con_tmux () {
    if [ "$TERM" != "screen" ]; then
        tmux attach-session -d
        exit
    fi
}
