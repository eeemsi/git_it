# Defines the prompt depending on the status of $SSH_CONNECTION and $TERM
setup_prompt() {
    if [ ! -z "$SSH_CONNECTION" ]; then
        PS1="%(!.${fg_red}.${fg_green})%n${fg_white}@${fg_white}%m${fg_white} %~${fg_no_colour} \${vcs_info_msg_0_}%(!.#.$) "
    else
        PS1="%(!.${fg_red}.${fg_green})%n${fg_white} %~${fg_no_colour} \${vcs_info_msg_0_}%(!.#.$) "
    fi
}

setup_prompt

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# Set title, if supported by terminal
set_termtitle() {
    # escape '%' chars in $1, make nonprintables visible
    a=${(V)1//\%/\%\%}

    # Truncate command, and join lines.
    a=$(print -rn -- "$a" | tr -d "\n\r")

    [ "$a" = "zsh" ] && { a=$(print -Pn "%~") }

    case "$TERM" in
    screen)
        # plain xterm title
        print -Pn -- "\e]2;$2: "
        print -rn -- "$a"
        print -n -- "\a"

        # screen title (in ^A")
        print -n -- "\ek"
        print -rn -- "$a"
        print -n -- "\e\\"

        # screen location
        print -Pn -- "\e_$2: "
        print -rn -- "$a"
        print -n -- "\e\\"
    ;;
    xterm*|rxvt)
        # plain xterm title
        print -Pn -- "\e]2;$2: "
        print -rn -- "$a"
        print -n -- "\a"
    ;;
    esac
}

precmd() {
    set_termtitle  "zsh" "%m"
    vcs_info
}

preexec() {
    set_termtitle "$1" "%m"
}

typeset -ga precmd_functions
precmd_functions+=precmd

typeset -ga preexec_functions
preexec_functions+=preexec

# Replacement for ps uax | grep $foo
psof () {
    PIDS=$(pidof ${1})
    [ -z "${PIDS}" ] && { echo "No such process"; return }
    ps -p "$PIDS" u
}

# Set modes for xrandr
presentation_mode () {
    case "$@" in
        on)
            xrandr --output VGA1 --mode 1024x768 --left-of LVDS1
        ;;
        off)
            xrandr --output VGA1 --off
        ;;
    esac
}

# More comfortable ifup ifdown
ifre () {
    s ifdown $* && s ifup $*
}

# Create directoy and cd to it
mkcd () {
    mkdir -p "$@" && cd "$@"
}

# Create temporary directory and cd to it
cdt () {
    local t
    t=$(mktemp -d)
    echo "$t"
    builtin cd "$t"
}

# Create a directory, cd into it and create a git repository
mkgit () {
     mkdir -p "$@" && cd "$@" && git init
}

# update git repositories in subfolders and clean them up if wanted
update_git () {
    ARRAY=(`ls -d ./*/`)

    for i in $ARRAY; do
        if [ -d "$i" ]; then
            echo "checking:" $i
            cd $i && git pull
            case "$@" in
                clean) make distclean && git clean -f && git gc
            ;;
            esac
            cd ..
        fi
    done
}

# from time to time some stats are interesting especially if new aliases are introduced
zsh_stats() {
    history | awk '{print $2}' | sort | uniq -c | sort -rn | head
    echo '  ================'
    sed -n 's/^\([a-z]*\) .*/\1/p' $HISTFILE |
    sort |
    uniq -c |
    sort -n -k1 |
    tail -25 |
    tac
}
