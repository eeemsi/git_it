# Defines the prompt depending on the status of $SSH_CONNECTION and $TERM
setup_prompt() {
    if [ -z "$SSH_CONNECTION"] && [ "$TERM" != "screen" ]; then
        PROMPT="%(!.${fg_red}.${fg_green})%n${fg_white} %~${fg_no_colour} \$(get_git_prompt_info)%(!.#.$) "
    else
        PROMPT="%(!.${fg_red}.${fg_green})%n${fg_white}@${fg_white}%m${fg_white} %~${fg_no_colour} \$(get_git_prompt_info)%(!.#.$) "
    fi
}

setup_prompt

# Replacement for ps uax | grep $foo
psof () {
    PIDS=$(pidof ${1})
    [ -z "${PIDS}" ] && { echo "No such process"; return }
    ps -p "$PIDS" u
}

# More comfortable ifup ifdown
ifre () {
    sudo ifdown $*
    sudo ifup $*
}

# Create directoy and cd to it
mkcd () {
    mkdir -p "$@" && cd "$@"
}

# Create temporary directory and cd to it
cdt () {
    local t
    t=$(mktemp -d)
    echo "$t"
    builtin cd "$t"
}

# Create a directory, cd into it and create a git repository
mkgit () {
     mkdir -p "$@" && cd "$@" && git init
}

# update git repositories in subfolders and clean them up if wanted
update_git () {
    ARRAY=(`ls -d ./*/`)

    for i in $ARRAY; do
        if [ -d "$i" ]; then
            echo "checking:" $i;
            cd $i && git pull
            case "$@" in
                clean) make distclean && git clean -f && git gc;
            esac
            cd ..;
        fi
    done
}

# from time to time some stats are interesting especially if new aliases are introduced
zsh_stats() {
    history | awk '{print $2}' | sort | uniq -c | sort -rn | head
    echo '  ================'
    sed -n 's/^\([a-z]*\) .*/\1/p' $HISTFILE |
    sort |
    uniq -c |
    sort -n -k1 |
    tail -25 |
    tac
}
